taskKey="ua.javarush.task.sql.task12.task1205"\n\nЗберегти аудіофайл до БД

Якщо раніше не підключав залежності, підключи їх. Для цього використовуй Alt+Ctrl+Shift+S (в IDEA), вкладка Libraries.
Залежності можна завантажити тут: https://javarush.com/downloads/ide/javarush/hibernate.zip
Архів розпакуй, і кожну залежність додай до модуля. Ця частина завдання не перевіряється, але якщо її не зробити, ти не зможеш локально виконувати код.

Головна мета завдання &mdash; успішно зберегти аудіофайл до SQL бази даних у вигляді масиву байтів.

Для цього:
1. Додай до публічного класу Audio приватні поля id (Long), fileName (String), audioFile (byte[]) та fileProperties (Map&lt;String, String&gt;).
2. У класу Audio повинні бути анотації @Entity та @Table (ім&#39;я таблиці audio_table , Схема &mdash; test).
3. У всіх полях повинні бути присутні геттери та сеттери.
4. У всіх полях повинні бути відповідні анотації.
- У поля id має бути анотація @Id.
- У поля fileName має бути анотація @Column, в якій зазначено ім&#39;я колонки &quot;file_name&quot;.
- У поля audioFile повинні бути анотації @Lob та @Column, в якій вказано ім&#39;я колонки &quot;audio_file&quot;.
- У поля fileProperties повинні бути анотації @Type з типом &quot; json&quot; та @Column, в якій вказано ім&#39;я колонки &quot;file_meta&quot;.
5. У методі saveAudioFile класу Solution збережи об&#39;єкт класу Audio та зроби коміт, використовуючи методи getSessionFactory та getAudioBuffer. Номер id, ім&#39;я файлу та метадані не беруть участь у тестуванні.

Для успішної роботи програми тобі знадобиться:
- Локально запустити SQL Server (localhost:3306) і створити базу даних із потрібною схемою, таблицею і колонками. У базі даних слід врахувати, що тип даних колонки audio_file може відрізнятися залежно від обсягу даних.
- У методі getAudioBuffer замінити посилання на локальний аудіофайл. Цей метод не бере участі у тестуванні.

Hint: тобі потрібно буде dependency від com.vladmihalcea з artifactId &quot;hibernate-types-55&quot; та версією 2.19.2.


Требования:
1.	Клас Audio має бути публічним і містити чотири приватні поля згідно з умовами.
2.	У класі Audio у полів мають бути публічні геттери та сеттери.
3.	У класі Audio анотації рівня класу мають бути розставлені відповідно до умов.
4.	У класі Audio анотації рівня поля мають бути розставлені відповідно до умов.
5.	Не змінюй метод getSessionFactory класу Solution.
6.	Не змінюй метод main класу Solution.
7.	У методі saveAudioFile класу Solution створи об&#39;єкт класу Audio та використовуй усі потрібні сеттери.
8.	У методі saveAudioFile класу Solution збережи об&#39;єкт класу Audio до бази даних відповідно до умов.


