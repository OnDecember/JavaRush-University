taskKey="ua.javarush.task.jdk13.task42.task4205"\n\nЧерга повідомлень

Програма не компілюється. Допиши її:
1. У класі Message імплементуй інтерфейс Delayed.
2. Додай до класу Message приватне поле endTime типу long, яке має бути проініціалізоване в конструкторі
значенням часу в наносекундах, що дорівнює системному часу+час життя повідомлення.
3. У класі Message перевизнач public метод long getDelay(TimeUnit unit).
Метод повинен повернути значення часу в наносекундах, що є різницею між endTime та системним часом.
4. У класі Message перевизнач public метод int compareTo(Delayed o). Метод повинен порівнювати результат виклику методу
getDelay(TimeUnit.NANOSECONDS) поточного об&#39;єкта та об&#39;єкта, який передається як параметр та повертати:
1, якщо результат getDelay поточного об&#39;єкта більший за getDelay переданого;
-1, якщо результат getDelay поточного об&#39;єкта менший за getDelay переданого;
0, якщо результат getDelay поточного об&#39;єкта та переданого дорівнюють один одному.

Запусти програму та подивися, як працює DelayQueue.


Требования:
1.	Клас Solution не змінюй.
2.	Клас Message має імплементувати інтерфейс Delayed.
3.	У класі Message має бути приватне поле endTime типу long, яке має бути проініціалізоване у конструкторі згідно з умовою.
4.	У класі Message потрібно перевизначити та реалізувати відповідно до умови public методи long getDelay(TimeUnit unit) та int compareTo(Delayed o).


